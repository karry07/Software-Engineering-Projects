{"remainingRequest":"E:\\software-engineering\\Software-Engineering-Projects\\admin\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!E:\\software-engineering\\Software-Engineering-Projects\\admin\\src\\components\\index\\IndexAsideStatic.vue?vue&type=script&lang=js&","dependencies":[{"path":"E:\\software-engineering\\Software-Engineering-Projects\\admin\\src\\components\\index\\IndexAsideStatic.vue","mtime":1717153220927},{"path":"E:\\software-engineering\\Software-Engineering-Projects\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1717153210346},{"path":"E:\\software-engineering\\Software-Engineering-Projects\\admin\\node_modules\\babel-loader\\lib\\index.js","mtime":1717153209461},{"path":"E:\\software-engineering\\Software-Engineering-Projects\\admin\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1717153210346},{"path":"E:\\software-engineering\\Software-Engineering-Projects\\admin\\node_modules\\vue-loader\\lib\\index.js","mtime":1717153219739}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBtZW51IGZyb20gIkAvdXRpbHMvbWVudSI7CgpleHBvcnQgZGVmYXVsdCB7CiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIG1lbnVMaXN0OiBbXSwKICAgICAgZHluYW1pY01lbnVSb3V0ZXM6IFtdLAogICAgICByb2xlOiAiIgogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICBsZXQgbWVudXMgPSBtZW51Lmxpc3QoKTsKICAgIHRoaXMubWVudUxpc3QgPSBtZW51czsKICAgIHRoaXMucm9sZSA9IHRoaXMuJHN0b3JhZ2UuZ2V0KCJyb2xlIik7CiAgfSwKICBtZXRob2RzOiB7CiAgICBtZW51SGFuZGxlcihuYW1lKSB7CiAgICAgIC8vY29uc29sZS5sb2cobmFtZSkKICAgICAgdGhpcy4kcm91dGVyLnB1c2goe25hbWU6IG5hbWV9KTsKICAgIH0KICB9Cn07Cg=="},{"version":3,"sources":["IndexAsideStatic.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyDA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"IndexAsideStatic.vue","sourceRoot":"src/components/index","sourcesContent":["<!--侧边栏-->\n<template>\n  <el-aside class=\"index-aside\" width=\"200px\">\n    <div class=\"index-aside-inner\">\n      <div v-for=\"item in menuList\" v-bind:key=\"item.roleName\">\n        <el-menu\n            default-active=\"0\"\n            v-if=\"role==item.roleName\"\n        >\n          <el-menu-item @click=\"menuHandler('home')\" index=\"0\">\n            <i class=\"el-icon-s-home\"></i>\n            首页\n          </el-menu-item>\n          <el-submenu\n              :index=\"1+''\"\n          >\n            <template slot=\"title\">\n              <i class=\"el-icon-s-custom\"></i>\n              <span>个人中心</span>\n            </template>\n            <el-menu-item\n                @click=\"menuHandler('updatePassword')\"\n                :index=\"1-1\"\n            ><i class=\"el-icon-s-check\"></i>\n              修改密码\n            </el-menu-item>\n            <el-menu-item\n                @click=\"menuHandler('basicinfo')\"\n                :index=\"1-2\"\n            ><i class=\"el-icon-s-check\"></i>\n              个人信息\n            </el-menu-item>\n          </el-submenu>\n          <el-submenu\n              v-for=\" (menu,index) in item.backMenu\"\n              v-bind:key=\"menu.menu\"\n              :index=\"index+2+''\"\n          >\n            <template slot=\"title\">\n              <i class=\"el-icon-s-management\"></i>\n              <span>{{ menu.menu }}</span>\n            </template>\n            <el-menu-item\n                v-for=\" (child,sort) in menu.child\"\n                v-bind:key=\"sort\"\n                @click=\"menuHandler(child.tableName)\"\n                :index=\"(index+2)+'-'+sort\"\n            ><i class=\"el-icon-s-open\"></i>\n              {{ child.menu }}\n            </el-menu-item>\n          </el-submenu>\n        </el-menu>\n      </div>\n    </div>\n  </el-aside>\n</template>\n<script>\nimport menu from \"@/utils/menu\";\n\nexport default {\n  data() {\n    return {\n      menuList: [],\n      dynamicMenuRoutes: [],\n      role: \"\"\n    };\n  },\n  mounted() {\n    let menus = menu.list();\n    this.menuList = menus;\n    this.role = this.$storage.get(\"role\");\n  },\n  methods: {\n    menuHandler(name) {\n      //console.log(name)\n      this.$router.push({name: name});\n    }\n  }\n};\n</script>\n<style lang=\"scss\" scoped>\n</style>\n\n"]}]}